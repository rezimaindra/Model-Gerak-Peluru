# -*- coding: utf-8 -*-
"""Gerak Peluru_1301184155.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SqDheQdI10fMIJ-SDMNTGQIdi5Q02cNp
"""

import numpy as np
import matplotlib.pyplot as plt
import math

# Hitung Numerik Gerak Peluru Tanpa Hambatan
x = 0
y = 0
v_awal = 50
sudut = 35
sudut_rad = (sudut/360)*(2*np.pi)
g = -9.806
t1 = 0
dt = 0.01
D = 0.0013
m = 0.15
hMaks_numerik = 0

vx = v_awal * math.cos(sudut_rad)
vy = v_awal * math.sin(sudut_rad)

# Array tanpa hambatan
x_array = []
y_array = []

x_array.append(x)
y_array.append(y)

i = 0
print('>>>>>>>>> NUMERIK <<<<<<<<<')
while (y >= 0):
  print('===============Iterasi ',i,' =============')
  print('x : ',x)
  print('y : ',y)
  print('t : ',t1)
  y = y_array[i] + (vy * dt)
  x = x_array[i] + (vx * dt)

  if (hMaks_numerik < y):
    hMaks_numerik = y

  if (y < 0) :
    break

  t1 += dt
  vy = vy + (g * dt)
  i += 1
  y_array.append(y)
  x_array.append(x)
  

print()
print(hMaks_numerik)
print(t1)

# Hitung Numerik Gerak Peluru dengan Hambatan
x = 0
y = 0
t = 0
hMaks_numerik_hambatan = 0

x_hambatan_array = []
y_hambatan_array = []

x_hambatan_array.append(0)
y_hambatan_array.append(0)

vx = v_awal * math.cos(sudut_rad)
vy = v_awal * math.sin(sudut_rad)
i = 0

v = math.sqrt((vx**2 + vy**2))
ax = (-D/m) * (v * vx)
ay =  g-(D/m) * v * vy

print('>>>>>>>>> NUMERIK <<<<<<<<<')
while (y >= 0):
  print('===============Iterasi ',i,' =============')
  print('x : ',x)
  print('y : ',y)
  print('t : ',t)
  x = x_hambatan_array[i] + (vx * dt)
  y = y_hambatan_array[i] + (vy * dt)

  if (hMaks_numerik_hambatan < y):
    hMaks_numerik_hambatan = y

  if (y < 0) :
    break
  
  t += dt

  vx = vx + (ax * dt)
  vy = vy + (ay * dt)

  i += 1
  x_hambatan_array.append(x)
  y_hambatan_array.append(y)

print()
print(hMaks_numerik_hambatan)
print(t)

# Hitung Analitik Gerak Peluru tanpa Hambatan
x2 = 0
y2 = 0
x2_array = []
y2_array = []
t2 = 0
hMaks_analitik = 0

i = 0
print('>>>>>>>> ANALITIK <<<<<<<<<')
while (y2 >= 0):
  x2 = v_awal * math.cos(sudut_rad)*t2
  y2 = (0.5 * g * t2**2) + (v_awal * math.sin(sudut_rad))*t2

  if (hMaks_analitik < y2):
    hMaks_analitik = y2
  
  if (y2 < 0) :
    break
  x2_array.append(x2)
  y2_array.append(y2)
  t2 += dt
  i += 1

  print('============ Iterasi ',i,'==============')
  print('x : ',x2)
  print('y : ',y2)
  print('t : ',t2)

print()
print(hMaks_analitik)
print(t2)

# Hitung Analitik Gerak Peluru dengan Hambatan

x3 = 0
y3 = 0
t3 = 0
hMaks_analitik_hambatan = 0

x3_array = []
y3_array = []

i = 0
print('>>>>>>>> ANALITIK <<<<<<<<<')
while (y3 >= 0):
  x3 = (0.5 * ax * t3**2)+ (v_awal * math.cos(sudut_rad))*t3
  y3 = (0.5 * ay * t3**2) + (v_awal * math.sin(sudut_rad))*t3

  if (hMaks_analitik_hambatan < y3):
    hMaks_analitik_hambatan = y3

  if (y3 < 0) :
    break
  x3_array.append(x3)
  y3_array.append(y3)
  t3 += dt
  i += 1

  print('============ Iterasi ',i,'==============')
  print('x : ',x3)
  print('y : ',y3)
  print('t : ',t3)

print()
print(hMaks_analitik_hambatan)
print(t3)

print('========== NUMERIK tanpa Hambatan ===========')
print('Total Waktu diudara: ', t1)
print('Jarak Terjauh: ', x_array[-1])
print('Tinggi Maksimum: ', hMaks_numerik)
print()
print('========== NUMERIK dengan Hambatan ===========')
print('Total Waktu diudara: ', t)
print('Jarak Terjauh: ', x_hambatan_array[-1])
print('Tinggi Maksimum: ', hMaks_numerik_hambatan)
print()
print('========== Analitik tanpa Hambatan ===========')
print('Total Waktu diudara: ', t2)
print('Jarak Terjauh: ', x2_array[-1])
print('Tinggi Maksimum: ', hMaks_analitik)
print()
print('========== Analitik dengan Hambatan ===========')
print('Total Waktu diudara: ', t3)
print('Jarak Terjauh: ', x3_array[-1])
print('Tinggi Maksimum: ', hMaks_analitik_hambatan)

plt.figure()
plt.plot(x_array, y_array, c='r', label='numerical tanpa hambatan')
plt.plot(x_hambatan_array, y_hambatan_array, c='g', label='numerical dengan hambatan')
plt.plot(x2_array, y2_array, c='b', label='analytical tanpa hambatan')
plt.plot(x3_array, y3_array, c='y', label='numerical dengan hambatan')
plt.axhline(c='black')
plt.axvline(c='black')
plt.legend()
plt.show()

# BONUS

x = 0
y = 0
t4 = 0
hMaks_bonus = 0

vx = v_awal * math.cos(sudut_rad)
vy = v_awal * math.sin(sudut_rad)


x_bonus_array = []
y_bonus_array = []

x_bonus_array.append(x)
y_bonus_array.append(y)

i = 0
print('>>>>>>>>> BONUS <<<<<<<<<')
while (y >= 0):
  print('===============Iterasi ',i,' =============')
  print('x : ',x)
  print('y : ',y)
  print('t : ',t4)
  x = x2_array[i] + (vx * dt)
  y = y2_array[i] + (vy * dt)

  if (hMaks_bonus < y):
    hMaks_bonus = y

  if (y < 0) :
    break
  
  t4 += dt
  vy = vy + (g * dt)
  i += 1
  x_bonus_array.append(x)
  y_bonus_array.append(y)
  
print()
print('========== BONUS ===========')
print('Total Waktu diudara: ', t4)
print('Jarak Terjauh: ', x_bonus_array[-1])
print('Tinggi Maksimum: ', hMaks_bonus)

plt.figure()
plt.plot(x_bonus_array, y_bonus_array, c='r', label='BONUS')
plt.axhline(c='black')
plt.axvline(c='black')
plt.legend()
plt.show()